//import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

buildscript {
	ext {
		springBootVersion = '1.5.10.RELEASE'
	}
	repositories {
		mavenCentral()
        jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'com.bmuschko:gradle-docker-plugin:3.2.4'
		//classpath("se.transmode.gradle:gradle-docker:1.2")
	}
}

plugins {
    id 'net.ltgt.apt' version '0.10'
    id 'org.hidetake.ssh' version '2.8.0'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
//apply plugin: 'docker'
apply plugin: 'com.bmuschko.docker-remote-api'

import com.bmuschko.gradle.docker.tasks.image.*

group = 'de.sidion'
version = '0.0.1'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

configurations.all {
  resolutionStrategy {
	force 'com.github.docker-java:docker-java:2.2.0'
  }
}

dependencies {
	compileOnly 'org.projectlombok:lombok:1.16.20'

	compile('org.springframework.boot:spring-boot-starter')
    compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.kafka:spring-kafka')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

task copyJar(type: Copy) {
    from        "build/libs/kafka-demo-${project.version}.jar"
    into        "docker"
    rename { String fileName ->
        fileName.replace("-${project.version}", "")
    }
}

docker {
    url = 'tcp://localhost:4243'
}

task buildImage(type: DockerBuildImage) {
    dependsOn   'copyJar'
    inputDir = new File("/opt/src/kafka-demo/docker")
    tag = 'kafka-demo:latest'
}

task buildImageFromHost(type: DockerBuildImage) {
    dependsOn   'copyJar'
    inputDir = new File("docker")
    tag = 'kafka-demo:latest'
}

bootRun {
  systemProperties = System.properties
}



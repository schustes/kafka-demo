//import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

buildscript {
	ext {
		springBootVersion = '1.5.10.RELEASE'
	}
	repositories {
		mavenCentral()
                jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
                classpath("com.bmuschko:gradle-docker-plugin:2.2")
                classpath("se.transmode.gradle:gradle-docker:1.2")             
	}
}

plugins {
    id 'net.ltgt.apt' version '0.10'
    id 'org.hidetake.ssh' version '2.8.0'
//    id 'com.bmuschko.docker-remote-api' version '2.2'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'

group = 'de.sidion'
version = '0.0.1'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	compileOnly 'org.projectlombok:lombok:1.16.20'

	compile('org.springframework.boot:spring-boot-starter')
        compile('org.springframework.boot:spring-boot-starter-web')
        //compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.kafka:spring-kafka')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

task copyJar(type: Copy) {
    from        "build/libs/kafka-demo-${project.version}.jar"
    into        'build/docker'
    rename { String fileName ->
        fileName.replace("-${project.version}", "")
    }
}

docker {
    useApi = false
}

task distDocker (type: Docker) {
    dependsOn   'copyJar'
    dockerfile = 'Dockerfile'
}

bootRun {
  systemProperties = System.properties
}


